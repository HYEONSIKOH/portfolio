{
  "projectDetail": [
    {
      "bigTitle" : "DbdbDeep",
      "photoNum" : "0",
      "name": "영화 추천 사이트 \uD83C\uDFAC\n",
      "date": "23/03/06 - 23/06/12",
      "details": [
        {
          "title": "제작이유 🎤",
          "detail": "매번 OTT 서비스를 이용할때면 방대한 양의 영화들 중 어떤영화를 봐야하는지 항상 고민에 빠지곤 합니다. 때문에 영화를 고르다 못해 OTT서비스를 종료하는 경우가 대부분이었습니다. \n또한 OTT서비스를 이용해 영화를 볼 때 내가 최근에 봤던 장르의 영화들만 추천해준다는 문제점이 있습니다. 추가적으로 이러한 추천기능은 각 OTT 플렛폼에 등재되어있는 영화만 추천하기 때문에 더 넓은 폭에서 영화선택이 불가능합니다. \n이러한 문제점을 바탕으로 OTT서비스를 둘러보다 버리는 시간을 절약하기 위해 이 주제를 선정하게 되었습니다. "
        },{
          "title" : "팀구성 및 역할 👩‍👧‍👧",
          "detail": "백엔드 1명, 프론트엔드 1명, AI 엔지니어 1명\n팀내 백엔드 개발자로 전반적인 프론트엔드, Flask 통신을 Spring Boot로 담당하고, RestAPI 제작을 도맡아 진행했습니다."
        },{
          "title" : "사용기술 🛠️",
          "detail" : "Spring Boot, Spring JPA, Spring Security, MariaDB",
          "useReason": ["Spring Security와 JWT를 사용하여 쿠키 방식의 로그인 기능을 제작","Spring JPA로 유저정보와 게시판 정보를 DB에서 가져옴","파이썬 Flask 서버에서 추천 영화 목록들을 가져와 Spring Boot로 전달 후, 클라이언트에게 응"]
        },{
          "title" : "배운점 📖",
          "detail" : "해당 프로젝트는 첫 프로젝트였습니다. 전반적으로 Spring Boot가 어떤 식으로 Rest API 통신을 하는지, JPA를 통해 데이터베이스를 어떻게 사용하는지에 대해 배울 수 있었던 프로젝트였습니다. 또한, 프론트엔드와의 협업을 통해 API의 요청과 응답의 흐름을 알게 되었고, 서로의 코드를 이해하며 프로젝트를 진행하였습니다."
        }
      ]
    },{
      "bigTitle" : "OFI",
      "photoNum" : "1",
      "name": "OFI 👗",
      "date": "2023/08 - 2023/09",
      "details": [
        {
          "title": "제작이유 🎤",
          "detail": "옷을 상황별로 잘 입고싶은 사용자들과 패션관련 직무로 나아가기위해 포트폴리오를 쌓을 곳이 마땅하지 않는 사용자들 모두를 만족시키기 위해 해당 플랫폼을 제작하게 되었습니다."
        },{
          "title" : "팀구성 및 역할 👩‍👧‍👧",
          "detail": "백엔드 3명, 프론트엔드 2명, 디자이너 1명\noAuth2로 소셜 로그인 기능 및 Redis를 사용한 이메일 인증 기능 그리고 배포를 담당하였습니다."
        },{
          "title" : "사용기술 🛠️",
          "detail" : "Spring Boot, Spring Security, JPA, MariaDB, Redis, CloudType(배포)",
          "useReason": ["비용 효율성과 GitHub Repository 연동을 통한 커밋 변경 시 자동 재배포 기능을 활용하기 위해, 국내 클라우드 플랫폼인 \"cloudtype.io\" 에서 배포를 진행","이메일 인증 과정에서 서버가 발행한 인증번호는 보안 및 관리의 효율성을 위해 제한된 시간 내에만 유효해야 함.\n Redis의 TTL 기능을 활용하면, 인증번호에 유효 시간을 설정하여 자동으로 삭제되도록 관리할 수 있기에 이 기술을 사용"]
        },{
          "title" : "배운점 📖",
          "detail" : "처음으로 프론트엔드 개발자와 UI/UX 디자이너와 함께 진행한 6주간의 협업 프로젝트였습니다.\n프로젝트 설계와 API 요청·응답 흐름을 이해하고 피그마와 Notion 등을 활용한 소통과 협업의 방식을 배우며 효과적인 협업 방식을 경험할 수 있었습니다.\n게다가 Redis와 배포라는 새로운 기술과 단계를 경험하면서 한걸음 더 성장할 수 있는 좋은 기회였습니다."
        },{
          "title" : "성과 🏆",
          "detail" : "[GDG X Whatever]에서 개최한 ‘6주프로덕트 챌린지’에서 최종1등(핵토콘상)을 수상하였습니다."
        }
      ]
    },{
      "bigTitle" : "Have-bin",
      "photoNum" : "2",
      "name": "Have-Bin \uD83D\uDDD1\uFE0F\n",
      "date": "24.03.05 ~ 2024.05.21",
      "details": [
        {
          "title": "제작이유 🎤",
          "detail": "밖에서 쓰레기가 생긴경우 주변에 쓰레기통을 찾아주는 서비스가 없거나 있어도 잘 상용화 되어있지 않습니다. \n그래서 환경을 조금이나마 보호하고자 이 서버스를 제작하게 되었습니다."
        },{
          "title" : "팀구성 및 역할 👩‍👧‍👧",
          "detail": "백엔드 2명, 안드로이드 앱 개발 1명 \n영상 처리 딥러닝 모델(Yolo)에 데이터셋을 학습시키고, 전반적인 Spring Boot로 API 서버 개발을 진행하였습니다.\nReact로 카카오지도를 통해 쓰레기통 위치를 보여주는 웹페이지를 개발하였습니다."
        },{
          "title" : "사용기술 🛠️",
          "detail" : "Spring Boot, Spring Security, JPA, MariaDB, Redis, \nYOLO, Flask ,React, PWA",
          "useReason": ["Security로 로그인 기능 구현","JPA를 사용하여 쓰레기통 데이터들을 저장하고 불러오기","YOLO 딥러닝 모델을 학습시켜 이미지에 쓰레기통 유무를 판단", "학습시킨 YOLO를 통해 공공데이터 쓰레기통 위치 3300개 중, 약 400개 정도의 정확한 쓰레기통 위치 데이터를 추출",
            "Flask를 사용하여 YOLO와 Spring Boot를 연동","React를 사용하여 카카오지도를 통해 쓰레기통 위치를 보여주는 웹페이지 개발","PWA를 사용하여 웹페이지를 앱처럼 사용할 수 있게 개발",
          "현재는 Nginx와 자체적 홈서버로, 서버 비용 절감하면서 사이트 배포 중.."]
        },{
          "title" : "배운점 📖",
          "detail" : "처음으로 AI와 연동하고 배포까지 진행해본 프로젝트였습니다. 단순하게 Spring Boot로 개발을 진행한것이 아닌, YOLO와 Flask를 이용하여 AI와 연동하고, React로 웹페이지를 개냄하고 AWS를 통하여 배포까지 진행까지 전체적인 프로젝트 흐름를 이해할 수 있었던 프로젝트였습니다."
        },{
          "title" : "성과 🏆",
          "detail" : "교내 캡스톤디자인 경진대회에서 입선 했습니다."
        }
      ]
    }
  ]
}